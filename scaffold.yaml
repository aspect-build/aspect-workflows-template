# yaml-language-server: $schema=https://hay-kot.github.io/scaffold/schema.json
messages:
  pre: |
    # Welcome to Aspect, the multi-language monorepo dev platform

    Generate boilerplate code for a new Bazel project using Aspect CLI and Aspect Workflows.

  post: |
    # Next Steps

    1. `cd {{ .ProjectSnake }}`, or open that folder in your editor.
    2. Read the developer guide in `/README.bazel.md`.
    3. Try out some commands, such as:
    {{- if .Scaffold.lint }}
      - Format:        `aspect run format`
      - Lint:          `aspect lint ...`
    {{- end }}
      - Run all tests: `aspect test ...`
      - Watch mode:    `./tools/ibazel run //my:devserver`

    4. Add source code and run `aspect configure` to create 
       additional `BUILD.bazel` files.

questions:
  - name: langs
    prompt:
      multi: true
      message: Languages to be used in the project
      options:
        - JavaScript & TypeScript
        - Python
        - Go
        - Java
        - C & C++
  - name: lint
    prompt:
      message: Setup format and linting?
      description: "Installs https://github.com/aspect-build/rules_lint"
      confirm: true
  - name: stamp
    prompt:
      message: Setup version stamping?
      description: "Read more: https://blog.aspect.build/versioning-releases-from-a-monorepo"
      confirm: true
  - name: protobuf
    prompt:
      message: Setup Protocol Buffers?
      description: "Install rules_proto; see https://github.com/bazelbuild/rules_proto/discussions/213"
      confirm: true

features:
  - value: "{{ .Scaffold.lint }}"
    globs:
      - "*/tools/format/*"
      - "*/tools/lint/*"
      - "*/.shellcheckrc"
      - "*/.pre-commit-config.yaml"
  - value: "{{ .Scaffold.stamp }}"
    globs:
      - "*/tools/workspace_status.sh"
      - "**/weekly_tag.yaml"
  - value: "{{ .Computed.javascript }}"
    globs:
      - "*/package.json"
      - "*/pnpm-*.yaml"
      - "*/eslint.config.mjs*"
      - "*/.npmrc"
      - "**/packages/**"
  - value: "{{ .Computed.python }}"
    globs:
      - "*/requirements/**"
      - "*/pyproject.toml"
      - "*/gazelle_python.yaml"
  - value: "{{ .Computed.go }}"
    globs:
      - "*/go.mod"
  - value: "{{ .Computed.java }}"
    globs:
      - "*/maven_install.json"
      - "*/pmd.xml"
  - value: "{{ .Computed.cpp }}"
    globs:
      - "*/.clang-tidy"

computed:
  javascript: "{{ has \"JavaScript & TypeScript\" .Scaffold.langs }}"
  python: "{{ has \"Python\" .Scaffold.langs }}"
  go: "{{ has \"Go\" .Scaffold.langs }}"
  java: "{{ has \"Java\" .Scaffold.langs }}"
  cpp: "{{ has \"C & C++\" .Scaffold.langs }}"

presets:
  kitchen-sink:
    lint: true
    langs: ['C & C++', 'JavaScript & TypeScript', 'Python', 'Go', 'Java']
    stamp: true
    protobuf: true
  go:
    langs: ['Go']
    lint: true
  js:
    langs: ['JavaScript & TypeScript']
    lint: true
  py:
    langs: ['Python']
    lint: true
  java:
    langs: ['Java']
    lint: true
  cpp:
    langs: ['C & C++']
    lint: true
  minimal:
    langs: []
